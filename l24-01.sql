CREATE TABLE EMPREGADO (
ENOME VARCHAR(15) NOT NULL,
CPF CHAR(11) NOT NULL,
NASCIMENTO DATE ,
ENDERECO VARCHAR(30) ,
SEXO VARCHAR(30) ,
SALARIO FLOAT ,
SUPERV CHAR(11) ,
DEPT INTEGER,
PRIMARY KEY(CPF)
);

CREATE TABLE DEPARTAMENTO (
DNOME VARCHAR(15) NOT NULL,
DNUM INTEGER NOT NULL,
GERENTE CHAR(11),
PRIMARY KEY(DNUM)
);

CREATE TABLE LOCAL_DEPT (
NUMDEPT INTEGER NOT NULL,
LOCALDEPT VARCHAR(15) NOT NULL,
PRIMARY KEY(NUMDEPT, LOCALDEPT)
);

CREATE TABLE PROJETO (
PNOME VARCHAR(15) NOT NULL,
PNUM INTEGER NOT NULL,
PLOCAL VARCHAR(15) NOT NULL,
NUMDEPT INTEGER NOT NULL,
PRIMARY KEY(PNUM)
);

CREATE TABLE TRABALHA_NO (
EMP CHAR(11) NOT NULL,
PROJ INTEGER NOT NULL,
HORAS FLOAT NOT NULL,
PRIMARY KEY(EMP, PROJ)
);

CREATE TABLE DEPENDENTES (
EMP CHAR(11) NOT NULL,
NOMEDEPENDENTE VARCHAR(15) NOT NULL,
 SEXO CHAR(1) ,
NASCIMENTO DATE ,
PARENTESCO VARCHAR(10) ,
PRIMARY KEY(EMP, NOMEDEPENDENTE)
);

-- a)

CREATE OR REPLACE VIEW gerentes_e_dependentes AS 
SELECT EMPREGADO.* FROM EMPREGADO
LEFT JOIN DEPENDENTES ON EMPREGADO.CPF = DEPENDENTES.EMP
WHERE EMPREGADO.CPF = DEPARTAMETO.GERENTE;


-- b)

CREATE OR REPLACE VIEW localizar AS
SELECT PROJETO.* FROM PROJETO
JOIN LOCAL_DEPTO ON PROJETO.NUMDEPT = LOCAL_DEPTO.NUMDEPT;

-- c)

CREATE OR REPLACE VIEW mais_que_3 AS
SELECT EMPREGADO.* FROM EMPREGADO
WHERE COUNT((
		SELECT NOMEDEPEND FROM DEPENDENTE
		WHERE EMP = EMPREGADO.CPF;
)) > 3;

-- d)

CREATE PROCEDURE alocar_func (CPF CHAR(11), COD_PROJ INT) 
BEGIN
		UPDATE TRABALHA_NO
		SET PROJ = COD_PROJ
		WHERE TRABALHA_NO.EMP = CPF;
END;

-- e)

CREATE PROCEDURE maior_idade()
BEGIN 
		SELECT EMPREGADO.NOME, EMPREGADO.CPF, TRABALHA_NO.PROJ FROM EMPREGADO, TRABALHA_NO
		WHERE TRABALHA_NO.EMP = EMPREGADO.CPF AND DATEDIFF(YEAR, EMPREGADO.NASC, CURRENT_DATE()) >= 18;
END;

-- f)

CREATE FUNCTION dependentes_departamento() RETURNS TABLE AS RETURN (
    SELECT DEPENDENTE.NOMEDEPEND AS Dependente, DEPENDENTE.EMP, EMPREGADO.DEPT FROM DEPENDENTE
    JOIN EMPREGADO ON DEPENDENTE.EMP = EMPREGADO.CPF
);

-- g)

CREATE FUNCTION calc_idade(CPF CHAR(11)) RETURNS INTEGER 
BEGIN (
		RETURN (
				SELECT DATEDIFF(YEAR, EMPREGADO.NASC, CURRENT_DATE) FROM EMPREGADO
				WHERE EMPREGADO.CPF = CPF;
)
END;

-- h)


